#version 330 // OpenGL version 2.1 (minimum requirement)

in vec3 retNormal; // MUST use same name as out variable used by vertex shader
in vec2 retTexCoord; // from the vertex shader
in vec3 retFragPos;

out vec4 FragColor;

uniform vec3 LightPosition;
uniform vec3 LightColor;
uniform vec3 AmbientLight;
uniform vec3 DiffuseColor;
uniform sampler2D sampler1; // sampler for the texture mapping
uniform sampler2D sampler2; // a second sampler for the second texture

void main()
{
	vec3 lightDir = normalize(LightPosition - retFragPos); // Normalize, for correct dot product results
	vec3 lambertian = dot(retNormal, lightDir) * LightColor; // Add Lambertian lighting
	vec3 output = clamp(lambertian + AmbientLight, 0.0f, 1.0f) * DiffuseColor;
	FragColor = vec4(output, 1.0f) * texture(sampler1, retTexCoord); // Calculate final color
}